#
#    This file is part of the Pi Entertainment System (PES).
#
#    PES provides an interactive GUI for games console emulators
#    and is designed to work on the Raspberry Pi.
#
#    Copyright (C) 2020 Neil Munday (neil@mundayweb.com)
#
#    PES is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    PES is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with PES.  If not, see <http://www.gnu.org/licenses/>.
#

---

#- name: "install bluez-ps3"
#  aur:
#    name: bluez-ps3
#    skip_installed: yes
#    ignore_arch: yes
#  become: yes
#  become_user: "{{ build_user }}"

- name: "auto enable Bluetooth"
  lineinfile:
    path: /etc/bluetooth/main.conf
    regexp: '^AutoEnable='
    insertafter: '^#AutoEnable='
    line: AutoEnable=true

- name: "disable discoverable timeout"
  lineinfile:
    path: /etc/bluetooth/main.conf
    regexp: '^DiscoverableTimeout='
    insertafter: '^#DiscoverableTimeout='
    line: DiscoverableTimeout=0

- name: "install bluez-utils-compat"
  aur:
    name: bluez-utils-compat
    skip_installed: yes
    skip_pgp_check: yes
  become: yes
  become_user: "{{ build_user }}"

#- name: "install pi-bluetooth"
#  aur:
#    name: pi-bluetooth
#    skip_installed: yes
#  become: yes
#  become_user: "{{ build_user }}"

- name: "check for bluetooth-raspberrypi"
  command: pacman -Q bluetooth-raspberrypi
  register: bluetooth_raspberrypi_result
  ignore_errors: yes

- name: "clone bluetooth-raspberrypi"
  git:
    repo: https://github.com/RoEdAl/alarm-bluetooth-raspberrypi
    dest: "{{ build_dir }}/bluetooth-raspberrypi"
    update: no
  become: yes
  become_user: "{{ build_user }}"
  when: bluetooth_raspberrypi_result is failed

- name: "install bluetooth-raspberrypi"
  command:
    cmd: makepkg -si --noconfirm
    chdir: "{{ build_dir }}/bluetooth-raspberrypi"
  become: yes
  become_user: "{{ build_user }}"
  when: bluetooth_raspberrypi_result is failed

- name: "add Bluetooth dtoverlay to /boot/config.txt"
  lineinfile:
    path: /boot/config.txt
    regexp: '^dtoverlay='
    insertbefore: '^gpu_mem='
    line: dtoverlay=bcmbt

- name: "create systemd-udevd.service.d"
  file:
    state: directory
    dest: /etc/systemd/system
    owner: root
    group: root
    mode: 0755

- name: "create systemd-udevd.service.d/override.conf"
  copy:
    src: systemd-udevd.service.d/override.conf
    dest: /etc/systemd/system/systemd-udevd.service.d/override.conf
    owner: root
    group: root
    mode: 0644
  register: override_result

- name: "reload systemd"
  command: systemctl daemon-reload
  when: override_result.changed

#- name: "enable brcm43438 service"
#  service:
#    name: brcm43438
#    enabled: yes
#    state: started

- name: create /opt/sbin
  file:
    path: /opt/sbin
    state: directory
    mode: 0700

- name: "install start-bt.sh"
  copy:
    src: start-bt.sh
    dest: /opt/sbin/start-bt.sh
    owner: root
    group: root
    mode: 0700

- name: "create start-bt udev rule"
  copy:
    src: 10-local.rules
    dest: /etc/udev/rules.d/10-local.rules
    owner: root
    group: root
    mode: 0644

- name: "disable bluetooth"
  service:
    name: bluetooth
    state: stopped
    enabled: no
